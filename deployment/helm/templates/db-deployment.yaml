apiVersion: apps/v1
kind: Deployment
metadata:
metadata:
  name: {{ include "issassist.fullname" . }}-db
  labels:
    {{- include "issassist.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "issassist.selectorLabels" . | nindent 6 }}
  replicas: {{ .Values.issassist.db.replicaCount }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "issassist.selectorLabels" . | nindent 8 }}
    spec:
      volumes:
        - name: db-data
          persistentVolumeClaim:
            claimName: {{ include "issassist.name" . }}-{{ .Values.issassist.db.hostname }}-pvc

      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "issassist.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Values.issassist.db.hostname }}
          image: {{ .Values.issassist.db.image.repository }}:{{ .Values.issassist.db.image.tag }}
          imagePullPolicy: {{ .Values.issassist.db.image.pullPolicy }}
          livenessProbe:
            exec:
              command:
                - bash
                - -ec
                - 'PGPASSWORD=$POSTGRES_PASSWORD psql -w -U "$POSTGRES_USER" -d "$POSTGRES_DATABASE"  -h 127.0.0.1 -c "SELECT 1"'
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - bash
                - -ec
                - 'PGPASSWORD=$POSTGRES_PASSWORD psql -w -U "$POSTGRES_USER" -d "$POSTGRES_DATABASE"  -h 127.0.0.1 -c "SELECT 1"'
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          ports:
            - name: {{ .Values.issassist.db.hostname }}
              containerPort: {{ .Values.issassist.db.service.port }}
          envFrom:
            - secretRef:
                name: {{ include "issassist.name" . }}-env
            - configMapRef:
                name: {{ include "issassist.name" . }}-env-db
          env:
            - name: POSTGRESQL_LOG_HOSTNAME
              value: "true"
            - name: POSTGRESQL_LOG_CONNECTIONS
              value: "false"
            - name: POSTGRESQL_LOG_DISCONNECTIONS
              value: "false"
            - name: POSTGRESQL_PGAUDIT_LOG_CATALOG
              value: "off"
            - name: POSTGRESQL_CLIENT_MIN_MESSAGES
              value: "error"
            - name: POSTGRESQL_SHARED_PRELOAD_LIBRARIES
              value: "pgaudit, repmgr"
            - name: POSTGRESQL_ENABLE_TLS
              value: "no"
          volumeMounts:
            - name: db-data
              mountPath: /var/lib/postgresql/data
          resources:
            {{- toYaml .Values.issassist.backend.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
